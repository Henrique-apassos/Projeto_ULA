// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/31/2024 20:12:28"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Decoder7_5
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Decoder7_5_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [4:0] Entrada;
// wires                                               
wire A;
wire A2;
wire B;
wire B2;
wire C;
wire C2;
wire D;
wire D2;
wire E;
wire E2;
wire F;
wire F2;
wire G;
wire G2;

// assign statements (if any)                          
Decoder7_5 i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.A2(A2),
	.B(B),
	.B2(B2),
	.C(C),
	.C2(C2),
	.D(D),
	.D2(D2),
	.E(E),
	.E2(E2),
	.Entrada(Entrada),
	.F(F),
	.F2(F2),
	.G(G),
	.G2(G2)
);
initial 
begin 
#1000000 $finish;
end 
// Entrada[ 4 ]
initial
begin
	repeat(3)
	begin
		Entrada[4] = 1'b0;
		Entrada[4] = #160000 1'b1;
		# 160000;
	end
	Entrada[4] = 1'b0;
end 
// Entrada[ 3 ]
initial
begin
	repeat(6)
	begin
		Entrada[3] = 1'b0;
		Entrada[3] = #80000 1'b1;
		# 80000;
	end
	Entrada[3] = 1'b0;
end 
// Entrada[ 2 ]
initial
begin
	repeat(12)
	begin
		Entrada[2] = 1'b0;
		Entrada[2] = #40000 1'b1;
		# 40000;
	end
	Entrada[2] = 1'b0;
end 
// Entrada[ 1 ]
always
begin
	Entrada[1] = 1'b0;
	Entrada[1] = #20000 1'b1;
	#20000;
end 
// Entrada[ 0 ]
always
begin
	Entrada[0] = 1'b0;
	Entrada[0] = #10000 1'b1;
	#10000;
end 
endmodule

